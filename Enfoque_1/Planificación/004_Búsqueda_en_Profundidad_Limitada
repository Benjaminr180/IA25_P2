def busqueda_profundidad_limitada(grafo, nodo_inicio, nodo_objetivo, limite):
    def dfs_limitado(nodo_actual, objetivo, limite_restante, camino, visitados):
        camino.append(nodo_actual)
        visitados.add(nodo_actual)

        if nodo_actual == objetivo:
            return camino

        if limite_restante <= 0:
            camino.pop()
            return None

        for vecino in grafo[nodo_actual]:
            if vecino not in visitados:
                resultado = dfs_limitado(vecino, objetivo, limite_restante - 1, camino, visitados)
                if resultado:
                    return resultado

        camino.pop()
        return None

    return dfs_limitado(nodo_inicio, nodo_objetivo, limite, [], set())

# Grafo simple
grafo = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

# Ejecutar búsqueda con límite
camino = busqueda_profundidad_limitada(grafo, 'A', 'F', 2)
print("Camino encontrado con límite:", camino)
